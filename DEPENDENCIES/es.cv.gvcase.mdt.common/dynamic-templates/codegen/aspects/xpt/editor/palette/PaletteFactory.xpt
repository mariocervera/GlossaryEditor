/*
 * Copyright (c) 2006 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Artem Tikhomirov (Borland) - initial API and implementation
 *    Francisco Javier Cano Munyoz (Prodevelop) - added palette customization
 *    Francisco Javier Cano Munyoz (Prodevelop) - adapted to Galileo
 */

«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»
«IMPORT 'http://www.eclipse.org/emf/2002/Ecore'»
«EXTENSION xpt::editor::palette::Utils»

«AROUND Factory FOR gmfgen::Palette»
«REM»fjcano :: added palette custonization«ENDREM»
«EXPAND xpt::Common::copyright FOR diagram.editorGen-»
package «packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «factoryClassName» {

	«EXPAND xpt::Common::generatedMemberComment»
	public void fillPalette(org.eclipse.gef.palette.PaletteRoot paletteRoot) {
		«IF definesStandardTools()-»
		cleanStandardTools(paletteRoot);
		«ENDIF-»
		«EXPAND xpt::editor::palette::PaletteFactory::addEntry('paletteRoot') FOREACH groups-»
		«REM»fjcano :: added palette custonization«ENDREM»
		es.cv.gvcase.mdt.common.palette.EditorPaletteRegistry.getInstance().customizePaletteForEditor(
				«diagram.editorGen.editor.packageName».«diagram.editorGen.editor.className».ID, paletteRoot);
	}
«IF definesStandardTools()»
«EXPAND xpt::editor::palette::PaletteFactory::cleanStandardToolsHack-»
«ENDIF-»

«EXPAND xpt::editor::palette::PaletteFactory::createGroup FOREACH collectGroups(self)»
«EXPAND xpt::editor::palette::PaletteFactory::createEntry FOREACH collectTools(self)»

«IF needsNodeToolEntryClass(self)»«EXPAND xpt::editor::palette::PaletteFactory::nodeToolEntry»«ENDIF-»
«IF needsLinkToolEntryClass(self)»«EXPAND xpt::editor::palette::PaletteFactory::linkToolEntry»«ENDIF-»
}
«ENDAROUND»

«AROUND createGroup FOR gmfgen::ToolGroup-»
	«EXPAND xpt::Common::generatedMemberComment('Creates \"' + title + '\" palette tool group')»
	private org.eclipse.gef.palette.PaletteContainer «createMethodName»() {
		«EXPAND xpt::editor::palette::PaletteFactory::newContainer('paletteContainer')-»
		«EXPAND xpt::editor::palette::PaletteFactory::setDescription('paletteContainer', self) FOR description-»
		«REM»fjcano :: added palette custonization«ENDREM»
		«EXPAND setID('paletteContainer') FOR title-»
		«EXPAND xpt::editor::palette::PaletteFactory::addEntry('paletteContainer') FOREACH entries-»
		return paletteContainer;
	}
«ENDAROUND»

«AROUND createEntry FOR gmfgen::AbstractToolEntry-»
	«EXPAND xpt::Common::generatedMemberComment»
	private org.eclipse.gef.palette.ToolEntry «createMethodName»() {
		«EXPAND xpt::editor::palette::PaletteFactory::newEntry('entry')-»
		«REM»fjcano :: added palette custonization«ENDREM»
		«EXPAND setID('entry') FOR title-»
		«EXPAND xpt::editor::palette::PaletteFactory::setSmallImage('entry', group.palette)-»
		«EXPAND xpt::editor::palette::PaletteFactory::setLargeImage('entry', group.palette)-»
		«EXPAND xpt::editor::palette::PaletteFactory::setToolClass('entry')-»
		«EXPAND xpt::editor::palette::PaletteFactory::setToolProperty('entry') FOREACH properties-»
		return entry;
	}
«ENDAROUND»

«DEFINE setID(varName : String) FOR String»
«REM»fjcano :: added palette custonization«ENDREM»
«varName».setId("«self»");
«ENDDEFINE»


