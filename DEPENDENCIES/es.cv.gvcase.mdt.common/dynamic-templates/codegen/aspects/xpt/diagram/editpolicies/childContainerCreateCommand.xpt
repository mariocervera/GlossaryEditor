/*
 * Copyright (c) 2007, 2008 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Alexander Shatalin (Borland) - initial API and implementation
 */
 
«IMPORT 'http://www.eclipse.org/gmf/2009/GenModel'»

«AROUND childContainerCreateCommand FOR Sequence(gmfgen::GenNode)-»
	«IF not self->isEmpty()-»
		«EXPAND xpt::Common::generatedMemberComment»
		protected org.eclipse.gef.commands.Command getCreateCommand(org.eclipse.gmf.runtime.emf.type.core.requests.CreateElementRequest req) {
			«REM»fjcano:: we set a parameter in the request to pass the Diagram  «ENDREM»
			org.eclipse.gmf.runtime.notation.Diagram diagram = es.cv.gvcase.mdt.common.util.DiagramEditPartsUtil.findDiagramFromEditPart(getHost());
			if (diagram != null) {
				req.getParameters().put(es.cv.gvcase.mdt.common.util.MultiDiagramUtil.BelongToDiagramSource, diagram);
			}
			«FOREACH self AS n-»
				«EXPAND xpt::diagram::editpolicies::childContainerCreateCommand::childNodeCreateCommand(n) FOR n.modelFacet-»
			«ENDFOREACH-»
			return super.getCreateCommand(req);
		}
	«ENDIF-»
«ENDAROUND»
